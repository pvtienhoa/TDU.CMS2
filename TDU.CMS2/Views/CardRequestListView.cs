using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using TDU.CMS2.DataBase;
using TDU.CMS2.DataModels;
using System.Data.Entity;
using TDU.CMS2.Modules;

namespace TDU.CMS2.Views
{
    public enum CardRequestListViewMode
    {
        Import,
        Devide,
        Receive,
        Company,
        Destroy
    }

    public partial class CardRequestListView : DevExpress.XtraEditors.XtraUserControl
    {
        public List<CardRequest> CardRequests { get; private set; }
        public CardRequestListViewMode Mode { get; set; }
        public CMSDbContext DbContext { get; private set; }
        public User CurrentUser { get; set; }
        
        public CardRequestListView()
        {
            InitializeComponent();
    //        // This line of code is generated by Data Source Configuration Wizard
    //        // Instantiate a new DBContext
    //        TDU.CMS2.DataBase.CMSDbContext dbContext = new TDU.CMS2.DataBase.CMSDbContext();
    //        // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
    //        dbContext.CardRequests.LoadAsync().ContinueWith(loadTask =>
    //        {
    //// Bind data to control when loading complete
    //cardRequestsBindingSource.DataSource = dbContext.CardRequests.Local.ToBindingList();
    //        }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        public void Start(CardRequestListViewMode mode)
        {
            Mode = mode;
            InitBindings();
        }

        public void InitBindings()
        {
            DbContext = new CMSDbContext();
            LoadRequestsToList(Mode);
            cardRequestsBindingSource.DataSource = CardRequests;
            //throw new NotImplementedException();
        }

        private void LoadRequestsToList(CardRequestListViewMode mode)
        {
            switch (mode)
            {
                case CardRequestListViewMode.Import:
                    CardRequests = new List<CardRequest>();
                    //throw new NotImplementedException();
                    break;
                case CardRequestListViewMode.Devide:
                    throw new NotImplementedException();
                //break;
                case CardRequestListViewMode.Receive:
                    var requests = from r in DbContext.CardRequests
                        where r.State.Equals(RequestState.Producing)
                        select r;
                    CardRequests = requests.ToList();
                    break;
                    //throw new NotImplementedException();
                //break;
                case CardRequestListViewMode.Destroy:
                    throw new NotImplementedException();
                //break;

                default:
                    throw new NotImplementedException();
                    //break;
            }
        }

        public void LoadRequestsFromFile(string filePath)
        {
            CardRequests =  DataFileHandler.ReadEssemcardFile(filePath);
            foreach (var cardRequest in CardRequests)
            {
                cardRequest.PinLocation = 0;
                cardRequest.CardLocation = 0;
                cardRequest.EmployeeName = CurrentUser.EmployeeName;
                cardRequest.State = RequestState.Producing;
                cardRequest.Type = RequestType.Issue;
            }
            Reload();
        }

        public void Reload()
        {
            cardRequestsBindingSource.DataSource = CardRequests;
        }

        public void RefreshData()
        {
            gridView1.RefreshData();
        }
    }
}